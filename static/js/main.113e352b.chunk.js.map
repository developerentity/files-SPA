{"version":3,"sources":["App.js","api/api.js","util/sort.js","redux/filesReducer.js","ContainerApp.js","redux/store.js","index.js"],"names":["App","props","files","sortBy","sortFlag","useState","dropdownOpen","setOpen","itemsList","map","item","className","name","split","size_now","ctime","mtime","file","ButtonDropdown","isOpen","toggle","DropdownToggle","color","caret","DropdownMenu","DropdownItem","onClick","filesAPI","fetch","proxyUrl","sortType","sort","a","b","SET_FILES","initialState","setFiles","type","filesReducer","state","action","ContainerApp","dispatch","useDispatch","useSelector","cookie","document","search","setStr","offset","end","length","indexOf","unescape","substring","getCookie","setSortFlag","useEffect","res","ok","json","data","console","error","statusText","value","expires","path","domain","secure","escape","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.113e352b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\nconst App = props => {\n\n  const { files, sortBy, sortFlag } = props\n\n  const [dropdownOpen, setOpen] = useState(false)\n\n  const toggle = () => setOpen(!dropdownOpen)\n\n  const itemsList = files?.map(item => {\n    return (\n      <div key={item.file} className='content-item'>\n        <div>Имя: {item.name.split('.')[0]}</div>\n        <hr />\n        <div>размер: <br /> {item.size_now}</div>\n        <hr />\n        <div>дата создания: {item.ctime}</div>\n        <hr />\n        <div>дата модификации: {item.mtime}</div>\n      </div>)\n  })\n\n  return (\n    <div className=\"main-wrap\">\n      <div className='header'>\n        <h1>Files</h1>\n        <div className='dropdownWrap'>\n          <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n            <DropdownToggle color=\"primary\" caret>\n              Сортировать по:\n          </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem className={sortFlag === 'name' ? 'active' : ''} onClick={() => sortBy('name')}>по имени</DropdownItem>\n              <DropdownItem className={sortFlag === 'size_now' ? 'active' : ''} onClick={() => sortBy('size_now')}>по размеру</DropdownItem>\n              <DropdownItem className={sortFlag === 'ctime' ? 'active' : ''} onClick={() => sortBy('ctime')}>по дате создания</DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        </div>\n      </div>\n      <div className='main-content'>\n        {itemsList}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const filesAPI = {\n    getFiles() {\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/'\n        const targetUrl = 'http://fs.mh.net.ua/ajax/lsjson.php?dir=global/video&idu=1'\n        return fetch(proxyUrl + targetUrl)\n    }\n}","export const sortBy = (sortType, files) => {\n    return files.sort((a, b) => {\n        if (a[sortType] > b[sortType]) {\n            return 1\n        }\n        if (a[sortType] < b[sortType]) {\n            return -1\n        }\n        return 0\n    })\n}","import { filesAPI } from \"../api/api\"\nimport { sortBy } from \"../util/sort\"\n\nconst SET_FILES = \"SET_FILES\"\n\nconst initialState = {\n    files: []\n}\n\nconst filesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FILES:\n            return { ...state, files: sortBy(action.sortType, [...action.files]) }\n\n        default:\n            return state\n    }\n}\n\nexport const setFiles = (files, sortType) => {\n    return { type: SET_FILES, files, sortType }\n}\n\nexport const getFiles = (sortType) => {\n    return async dispatch => {\n        try {\n            const res = await filesAPI.getFiles()\n            if (res.ok) {\n                const data = await res.json()\n                dispatch(setFiles(data, sortType))\n            }\n            else {\n                console.error(res.statusText)\n            }\n        } catch (err) {\n            console.error(err)\n        }\n    }\n}\n\nexport default filesReducer","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport App from './App'\nimport { getFiles, setFiles } from './redux/filesReducer'\n\nfunction ContainerApp() {\n\n  const dispatch = useDispatch()\n  const files = useSelector(state => state.files)\n\n  const setCookie = (name, value, expires, path, domain, secure) => {\n    document.cookie = name + \"=\" + escape(value) +\n      ((expires) ? \"; expires=\" + expires : \"\") +\n      ((path) ? \"; path=\" + path : \"\") +\n      ((domain) ? \"; domain=\" + domain : \"\") +\n      ((secure) ? \"; secure\" : \"\")\n  }\n  const getCookie = name => {\n    let cookie = \" \" + document.cookie\n    let search = \" \" + name + \"=\"\n    let setStr = null\n    let offset = 0\n    let end = 0\n    if (cookie.length > 0) {\n      offset = cookie.indexOf(search)\n      if (offset !== -1) {\n        offset += search.length;\n        end = cookie.indexOf(\";\", offset)\n        if (end === -1) {\n          end = cookie.length;\n        }\n        setStr = unescape(cookie.substring(offset, end))\n      }\n    }\n    return (setStr)\n  }\n  const [sortFlag, setSortFlag] = useState(getCookie('sortSettings'))\n\n  useEffect(() => {\n    if (!files.length) {\n      dispatch(getFiles(sortFlag))\n    }\n  }, [sortFlag, files, dispatch])\n\n  const sortBy = (sortType) => {\n    dispatch(setFiles(files, sortType))\n    setCookie('sortSettings', sortType, 1209600)\n    setSortFlag(sortType)\n  }\n\n  return (\n    <App\n      files={files}\n      sortBy={sortBy}\n      sortFlag={sortFlag}\n    />\n  )\n}\n\nexport default ContainerApp\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport filesReducer from './filesReducer'\n\nconst store = createStore(filesReducer, applyMiddleware(thunkMiddleware))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ContainerApp from './ContainerApp';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ContainerApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}